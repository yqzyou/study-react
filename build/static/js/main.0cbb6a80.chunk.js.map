{"version":3,"sources":["images/logo.png","js/components/login.js","js/components/header.js","js/components/contentchild.js","js/components/content.js","js/components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","Form","useForm","forms","form","layout","onFinish","e","console","log","formData","getFieldsValue","closeLogin","message","success","bind","Item","name","label","placeholder","type","htmlType","Header","useState","menuCurrent","setCount","visible","setVisible","isHasLogin","userShow","key","onClick","span","className","href","src","require","alt","selectedKeys","mode","Icon","title","onCancel","res","ContentChild","onChange","this","changeParent","React","Component","Content","state","userName","event","setState","target","value","userid","handlechange","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uLAAAA,EAAOC,QAAU,IAA0B,kC,8NCG5B,WAACC,GAAU,IAAD,EAELC,IAAKC,UAAdC,EAFc,oBAsBrB,OACI,kBAAC,IAAD,CAAMC,KAAMD,EAAOE,OAAO,aAAaC,SApBtB,SAACC,GACzBC,QAAQC,IAAIT,GAMX,IAAIU,EAAUP,EAAMQ,iBACpBH,QAAQC,IAAIC,GAMNV,EAAMY,WAAWF,GACvBG,IAAQC,QAAQ,mCAKoDC,U,IAC1D,kBAAC,IAAKC,KAAN,CAAWC,KAAK,WAAWC,MAAM,gBAC7B,kBAAC,IAAD,CAAOC,YAAY,gDAEvB,kBAAC,IAAKH,KAAN,CAAWC,KAAK,WAAWC,MAAM,gBAC7B,kBAAC,IAAD,CAAOE,KAAK,WAAWD,YAAY,gDAEvC,kBAAC,IAAKH,KAAN,CAAWC,KAAK,kBAAkBC,MAAM,4BACpC,kBAAC,IAAD,CAAOE,KAAK,WAAWD,YAAY,4DAEvC,kBAAC,IAAD,CAAQC,KAAK,UAAUC,SAAS,UAAhC,kBChCCC,EAAS,WAAM,IAAD,EACSC,mBAAS,OADlB,mBAChBC,EADgB,KACHC,EADG,OAEMF,oBAAS,GAFf,mBAEhBG,EAFgB,KAERC,EAFQ,OAGQJ,oBAAS,GAHjB,mBAGhBK,EAHgB,KAoBjBC,GApBiB,KAoBND,EACjB,kBAAC,IAAKZ,KAAN,CAAWc,IAAI,SACX,kBAAC,IAAD,CAAQV,KAAK,UAAUC,SAAS,UAAhC,6BAGJ,kBAAC,IAAKL,KAAN,CAAWc,IAAI,YACX,kBAAC,IAAD,CAAQV,KAAK,UAAUC,SAAS,SAASU,QAf9B,WACXJ,GAAW,KAcX,+BAGJ,OACI,gCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKK,KAAM,GACP,0BAAMC,UAAU,4BAEpB,kBAAC,IAAD,CAAKD,KAAM,GACP,uBAAGE,KAAK,IAAID,UAAU,QAClB,yBAAKE,IAAKC,EAAQ,KAA0BC,IAAI,SAChD,6CAGR,kBAAC,IAAD,CAAKL,KAAM,IACP,kBAAC,IAAD,CAAMD,QApCP,SAACxB,GACZC,QAAQC,IAAIF,GACZkB,EAASlB,EAAEuB,MAkCwBQ,aAAc,CAACd,GAAce,KAAK,cACrD,kBAAC,IAAKvB,KAAN,CAAWc,IAAI,OACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,UACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,UACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,SACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,QACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,QACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,QACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGA,kBAAC,IAAKJ,KAAN,CAAWc,IAAI,YACX,kBAACU,EAAA,EAAD,CAAMpB,KAAK,aADf,gBAGCS,GAEL,kBAAC,IAAD,CAAOY,MAAM,cAAcf,QAASA,EAASgB,SAAU,WACnDf,GAAW,KAEX,kBAAC,EAAD,CAAWf,WAzDZ,SAAC+B,GAChBnC,QAAQC,IAAIkC,GACZhB,GAAW,QA0DH,kBAAC,IAAD,CAAKK,KAAM,KAEf,0DC/ESY,E,iLAEb,OACI,6BACI,2BAAG,2BAAOxB,KAAK,OAAOyB,SAAUC,KAAK9C,MAAM+C,qB,GAJjBC,IAAMC,WCA3BC,E,YACjB,aAAc,IAAD,8BACT,+CACKC,MAAQ,CAACC,SAAS,SAFd,E,0EAIAC,GACTP,KAAKQ,SAAS,CACVF,SAAUC,EAAME,OAAOC,U,+BAI3B,OACI,6BACI,gFACA,2BAAIV,KAAKK,MAAMC,SAAf,IAA0BN,KAAK9C,MAAMyD,QACrC,kBAAC,EAAD,CAAeV,aAAcD,KAAKY,aAAa3C,KAAK+B,a,GAf/BE,IAAMC,WCCtBU,E,iLAEb,OACL,gCACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAK3B,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GAAIC,UAAU,UAAzB,gDAGA,kBAAC,IAAD,CAAKD,KAAM,U,GAToBgB,IAAMC,WCsB3BW,E,6LAhBTpD,QAAQC,IAAI,4B,0CAGZD,QAAQC,IAAI,2B,+BAGd,OACE,yBAAKwB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAewB,OAAQ,OACvB,kBAAC,EAAD,W,GAZUT,IAAMC,WCKJY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0cbb6a80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25810de4.png\";","import React from 'react'\nimport {Form,Input,Button,message} from 'antd';\n\nexport default (props)=> {\n\n    const [forms] = Form.useForm();\n    const handleSubmit = (e) =>{\n\tconsole.log(props)\n\t\t//页面开始向 API 进行提交数据\n\t\t// e.preventDefault();\n\t\t// var myFetchOptions = {\n\t\t// \tmethod: 'GET'\n\t\t// };\n\t\tvar formData= forms.getFieldsValue();\n\t\tconsole.log(formData);\n\t\t// fetch(\"http://newsapi.gugujiankong.com/Handler.ashx?action=register&username=userName&password=password&r_userName=\"+formData.userName+\"&r_password=\"+formData.password+\"&r_confirmPassword=\"+formData.confirmPassword,myFetchOptions).\n\t\t// then(response=>response.json()).then(json=>{\n\t\t// \tthis.setState({userNickName:json.NickUserName,userid:json.UserId});\n\n        // });\n        props.closeLogin(formData)\n\t\tmessage.success(\"请求成功！\");\n\t\t// this.setModalVisible(false);\n    }\n    \n    return (\n        <Form form={forms} layout='horizontal' onFinish={handleSubmit.bind(this)}>\n            <Form.Item name=\"userName\" label=\"账户\">\n                <Input placeholder=\"请输入您的账号\"/>\n            </Form.Item>\n            <Form.Item name=\"password\" label=\"密码\">\n                <Input type=\"password\" placeholder=\"请输入您的密码\"/>\n            </Form.Item>\n            <Form.Item name=\"confirmPassword\" label=\"确认密码\">\n                <Input type=\"password\" placeholder=\"请再次输入您的密码\"/>\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" >注册</Button>\n        </Form>\n    )\n}","import React,{ useState }from 'react'\nimport { Row, Col, Menu,Button,Modal} from 'antd';\nimport Icon from '@ant-design/icons'\nimport LoginForm from './login'\nexport const Header = () =>{\n    const [menuCurrent, setCount] = useState('top');\n    const [visible,setVisible] = useState(false)\n    const [isHasLogin, setLogin] = useState(false);\n    // this.state = {menuCurrent:'bank',\n    // }\n    const handle = (e)=>{\n        console.log(e)\n        setCount(e.key)\n    }\n\n    const toLogin =()=>{\n        setVisible(true)\n    }\n\n    const closeLogin = (res)=>{\n        console.log(res)\n        setVisible(false)\n    }\n\n    const userShow = isHasLogin?\n    <Menu.Item key=\"login\">\n        <Button type=\"primary\" htmlType=\"button\">个人中心</Button>\n    </Menu.Item>\n    :\n    <Menu.Item key=\"register\">\n        <Button type=\"primary\" htmlType=\"button\" onClick={toLogin}>登陆/注册</Button>\n    </Menu.Item>\n        \n    return (\n        <header>\n            <Row>\n                <Col span={2}>\n                    <span className=\"iconfont icon-iconNews\"></span>\n                </Col>\n                <Col span={4}>\n                    <a href=\"/\" className=\"logo\">\n                        <img src={require('../../images/logo.png')} alt=\"logo\"/>\n                        <span>ReactNews</span>\n                    </a>\n                </Col>\n                <Col span={16}>\n                    <Menu onClick={handle} selectedKeys={[menuCurrent]} mode='horizontal'>\n                        <Menu.Item key=\"top\">\n                            <Icon type=\"appstore\"/>头条\n                        </Menu.Item>\n                        <Menu.Item key=\"shehui\">\n                            <Icon type=\"appstore\"/>社会\n                        </Menu.Item>\n                        <Menu.Item key=\"guonei\">\n                            <Icon type=\"appstore\"/>国内\n                        </Menu.Item>\n                        <Menu.Item key=\"guoji\">\n                            <Icon type=\"appstore\"/>国际\n                        </Menu.Item>\n                        <Menu.Item key=\"yule\">\n                            <Icon type=\"appstore\"/>娱乐\n                        </Menu.Item>\n                        <Menu.Item key=\"tiyu\">\n                            <Icon type=\"appstore\"/>体育\n                        </Menu.Item>\n                        <Menu.Item key=\"keji\">\n                            <Icon type=\"appstore\"/>科技\n                        </Menu.Item>\n                        <Menu.Item key=\"shishang\">\n                            <Icon type=\"appstore\"/>时尚\n                        </Menu.Item>\n                        {userShow}\n                    </Menu>\n                    <Modal title=\"Basic Modal\" visible={visible} onCancel={()=>{\n                        setVisible(false)\n                    }}>\n                        <LoginForm closeLogin={closeLogin}></LoginForm>\n                    </Modal>\n                </Col>\n                <Col span={2}></Col>\n            </Row>\n            <h1>这是头部</h1>\n        </header>\n\n        \n    )   \n}","import React from 'react'\n\nexport default class ContentChild extends React.Component{\n    render(){\n        return(\n            <div>\n                <p><input type='text' onChange={this.props.changeParent} /></p>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport ContentChild from './contentchild'\nexport default class Content extends React.Component{\n    constructor(){\n        super()\n        this.state = {userName:'parry'}\n    };\n    handlechange(event){\n        this.setState({\n            userName: event.target.value\n        })\n    };\n    render(){\n        return(\n            <div>\n                <h1>这是页面主体内容</h1>\n                <p>{this.state.userName} {this.props.userid}</p>\n                <ContentChild  changeParent={this.handlechange.bind(this)}/>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Row, Col} from 'antd';\n\nexport default class Footer extends React.Component{\n    render(){\n        return (\n\t\t\t<footer>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col span={2}></Col>\n\t\t\t\t\t<Col span={20} className=\"footer\">\n            &copy;&nbsp;2016 ReactNews. All Rights Reserved.\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col span={2}></Col>\n\t\t\t\t</Row>\n\t\t\t</footer>\n\t\t);\n    }\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Header} from './js/components/header'\nimport ComponentBody from './js/components/content'\nimport ComponentFooter from './js/components/footer'\n\nclass App extends React.Component{\n  componentWillMount(){\n      console.log('app-componentwillmount')\n  }\n  componentDidMount(){\n      console.log('app-componentdidmount')\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <ComponentBody userid={1234}></ComponentBody>\n        <ComponentFooter></ComponentFooter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}